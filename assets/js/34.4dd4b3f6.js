(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{417:function(t,a,s){"use strict";s.r(a);var n=s(13),v=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"java虚拟机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java虚拟机"}},[t._v("#")]),t._v(" Java虚拟机")]),t._v(" "),s("h2",{attrs:{id:"运行时数据区中包含哪些区域-哪些线程共享-哪些线程独享"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行时数据区中包含哪些区域-哪些线程共享-哪些线程独享"}},[t._v("#")]),t._v(" 运行时数据区中包含哪些区域？哪些线程共享？哪些线程独享？")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-1304855543.cos.ap-guangzhou.myqcloud.com/blog/img/20210630004443.png",alt:"img"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-1304855543.cos.ap-guangzhou.myqcloud.com/blog/img/20210630004452.png",alt:"img"}})]),t._v(" "),s("h2",{attrs:{id:"java-创建一个对象的过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java-创建一个对象的过程"}},[t._v("#")]),t._v(" Java 创建一个对象的过程？")]),t._v(" "),s("ul",[s("li",[t._v("检查类是否已经被加载")]),t._v(" "),s("li",[t._v("为对象分配内存空间")]),t._v(" "),s("li",[t._v("为分配的内存空间初始化零值（为对象字段设置零值）")]),t._v(" "),s("li",[t._v("对对象进行其它设置（设置对象头）")]),t._v(" "),s("li",[t._v("执行构造方法")])]),t._v(" "),s("h2",{attrs:{id:"如何访问对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何访问对象"}},[t._v("#")]),t._v(" 如何访问对象？")]),t._v(" "),s("ul",[s("li",[t._v("使用句柄的方式")]),t._v(" "),s("li",[t._v("使用直接指针的方式")])]),t._v(" "),s("h2",{attrs:{id:"java-内存模型的原子性、可见性和有序性是通过哪些操作实现的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java-内存模型的原子性、可见性和有序性是通过哪些操作实现的"}},[t._v("#")]),t._v(" Java 内存模型的原子性、可见性和有序性是通过哪些操作实现的？")]),t._v(" "),s("ul",[s("li",[t._v("原子性：synchronized")]),t._v(" "),s("li",[t._v("可见性：volatile")]),t._v(" "),s("li",[t._v("有序性：volatile和synchronized")])]),t._v(" "),s("h2",{attrs:{id:"什么是双亲委派机制-有什么作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是双亲委派机制-有什么作用"}},[t._v("#")]),t._v(" 什么是双亲委派机制？有什么作用？")]),t._v(" "),s("p",[t._v("Java的类加载器：AppClassLoader -> ExtClassLoader -> BootStrapClassLoader")]),t._v(" "),s("p",[t._v("每一种类加载器都有自己的加载目录，Java中的AppClassLoader、ExtClassLoader 都继承了URLClassLoader，URLClassLoader继承了SecureClassLoader，SecureClassLoader又继承了ClassLoader，每个类加载器对他加载过的类，都是有一个缓存的：")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://blog-1304855543.cos.ap-guangzhou.myqcloud.com/blog/img/20210630004512.png",alt:"img"}}),t._v(" "),s("p",[t._v("双亲委派：向上委托查找，向下委托，作用：保护Java的层的类不会被应用程序覆盖")]),t._v(" "),s("p",[t._v("核心代码：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" resolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassNotFoundException")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClassLoadingLock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// First, check if the class has already been loaded")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findLoadedClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" t0 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nanoTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findBootstrapClassOrNull")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassNotFoundException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ClassNotFoundException thrown if class not found")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// from the non-null parent class loader")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If still not found, then invoke findClass in order")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// to find the class.")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" t1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nanoTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this is the defining class loader; record the stats")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("misc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("PerfCounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getParentDelegationTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" t0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("misc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("PerfCounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFindClassTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addElapsedTimeFrom")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("misc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("PerfCounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFindClasses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("increment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolveClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br")])]),s("h2",{attrs:{id:"java类加载的全过程是怎么样的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java类加载的全过程是怎么样的"}},[t._v("#")]),t._v(" Java类加载的全过程是怎么样的？")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://blog-1304855543.cos.ap-guangzhou.myqcloud.com/blog/img/20210727230233.png",alt:"Java类加载过程"}}),t._v(" "),s("p",[t._v("类加载过程：加载 -> 连接 -> 初始化 -> 使用 -> 卸载")]),t._v(" "),s("ol",[s("li",[t._v("加载：把Java的字节码数据加载到JVM内存当中，并映射成JVM认可的数据结构")]),t._v(" "),s("li",[t._v("连接：可以分为三个小的阶段：\n"),s("ul",[s("li",[t._v("验证：检查加载到的字节码信息是否符合JVM规范")]),t._v(" "),s("li",[t._v("准备：创建类或接口的静态变量，并赋初始值，半初始化状态")]),t._v(" "),s("li",[t._v("解析：将符号引用转为直接引用")])])]),t._v(" "),s("li",[t._v("初始化：创建对象")])]),t._v(" "),s("h2",{attrs:{id:"你了解分代理论吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#你了解分代理论吗"}},[t._v("#")]),t._v(" 你了解分代理论吗？")]),t._v(" "),s("p",[t._v("目前绝大部分的JJVM，在针对对象进行垃圾收集的时候，会将对象熬过垃圾收集的次数，视为对象的年龄，依次将对象至少划分为新生代和老年代。分代收集理论基于以下三种假说和经验法则：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("弱分代假说")]),t._v(" "),s("p",[t._v("绝大数对象，在第一次垃圾收集时就会被回收，按照经验法则，这个值高达百分之九十八")])]),t._v(" "),s("li",[s("p",[t._v("强分代假说")]),t._v(" "),s("p",[t._v("熬过越多次收集过程的对象就越难以消亡")])]),t._v(" "),s("li",[s("p",[t._v("跨代引用假说")]),t._v(" "),s("p",[t._v("该假说认为只会存在很少的跨代引用。因为只要经过一些次数的垃圾收集，即使还存在跨代引用，新生代会变成老年代，跨代引用也就自然小时了，所以跨代引用的数量不会多")])])]),t._v(" "),s("p",[t._v("Java堆分为新生代和老年代，针对收集对象处于哪一代，一共有以下四种收集方式：")]),t._v(" "),s("ul",[s("li",[t._v("部分收集")]),t._v(" "),s("li",[t._v("新生代收集（Minor GC/Young GC），只收集新生代垃圾对象")]),t._v(" "),s("li",[t._v("老年代收集（Major GC/Old GC），只收集老年代垃圾对象，目前只有CMS收集器会单独收集老年代对象")]),t._v(" "),s("li",[t._v("混合收集（Mixed GC），收集来自整个新生代以及部分老年代中的垃圾对象，目前只有G1会有这种行为")]),t._v(" "),s("li",[t._v("整堆收集（Full GC）：收集整个Java堆和方法区的垃圾收集")])]),t._v(" "),s("h2",{attrs:{id:"jdk-中有几种引用类型-分别的特点是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdk-中有几种引用类型-分别的特点是什么"}},[t._v("#")]),t._v(" JDK 中有几种引用类型？分别的特点是什么？")]),t._v(" "),s("p",[t._v("在JDK1.2之前，一个对象只有“被引用”或者“未被引用”两种状态，但这种描述方式不能满足所有的场景，譬如我们希望描述一类对象：当内存空间还足够时，能保留在内存之中，如果内存空间在垃圾收集器后仍然非常警长，那就可以抛弃这些对象，这个时候就需要对引用的概念进行扩充。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("引用类型")]),t._v(" "),s("th",[t._v("定义")]),t._v(" "),s("th",[t._v("特点")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("强引用（Strong Reference）")]),t._v(" "),s("td",[t._v("通过new关键赋值的引用")]),t._v(" "),s("td",[t._v("只要强引用关系还存在，垃圾收集器永远不会回收掉引用的对象")])]),t._v(" "),s("tr",[s("td",[t._v("软引用（Soft Reference）")]),t._v(" "),s("td",[t._v("还有用，但非必须的对象")]),t._v(" "),s("td",[t._v("内存不够时一定会被GC，长期不用也会被GC")])]),t._v(" "),s("tr",[s("td",[t._v("弱引用（Weak Reference）")]),t._v(" "),s("td",[t._v("非必须对象")]),t._v(" "),s("td",[t._v("被弱引用关联的对象只能生存到下一次垃圾收集发生为止。无论当前内存是否足够，都会回收")])]),t._v(" "),s("tr",[s("td",[t._v("虚引用（Phantom Reference）")]),t._v(" "),s("td",[t._v("“幽灵引用”或者“幻影引用”")]),t._v(" "),s("td",[t._v("对象被垃圾收集器回收时收到一个系统通知")])])])]),t._v(" "),s("h2",{attrs:{id:"一个对象从加载到jvm-再到gc清除-都经历了什么过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一个对象从加载到jvm-再到gc清除-都经历了什么过程"}},[t._v("#")]),t._v(" 一个对象从加载到JVM，再到GC清除，都经历了什么过程？")]),t._v(" "),s("p",[t._v("详细步骤说明：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("用户创建一个对象，JVM首先需要到方法区去找对象的类型信息，然后再创建对象。")])]),t._v(" "),s("li",[s("p",[t._v("JVM要实例化一个对象，首先要在堆中先创建一个对象 -> 半初始化状态")])]),t._v(" "),s("li",[s("p",[t._v("对象首先会分配在堆内存中新生代的Eden区，然后经过一次Minor GC，对象如果存活，就会进入S区，在后续的每次GC中，如果对象一直存活，就会在S区来回拷贝，每移动一次，年龄加1，年龄最大值是15，默认就是最大年龄是15。超过年龄先之后，对象转入老年代。")])]),t._v(" "),s("li",[s("p",[t._v("当方法执行结束后，栈中的指针会先移除掉。")])]),t._v(" "),s("li",[s("p",[t._v("堆中的对象，经过Full GC就会被标记为垃圾，然后被GC线程清理掉。")])])]),t._v(" "),s("h2",{attrs:{id:"怎么样确定一个对象不是垃圾"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么样确定一个对象不是垃圾"}},[t._v("#")]),t._v(" 怎么样确定一个对象不是垃圾？")]),t._v(" "),s("p",[t._v("有两种定位垃圾的方式：")]),t._v(" "),s("ol",[s("li",[t._v("引用计数法：这种方式是给堆内存当中的每个对象记录一个引用个数，引用个数为0的就认为是垃圾。这是早期JDK采用的方式，引用计数无法解决循环引用的问题")]),t._v(" "),s("li",[t._v("根可达算法：这种方式是在内存中，从引用根对象向下一直找引用，找不到的对象就是垃圾")])]),t._v(" "),s("h2",{attrs:{id:"什么是gc-root"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是gc-root"}},[t._v("#")]),t._v(" 什么是GC Root？")]),t._v(" "),s("ul",[s("li",[t._v("在虚拟机栈（栈帧中的本地变量表）中引用的对象，譬如各个线程被调用的方法堆栈中使用到的参数、局部变量、临时变量等。")]),t._v(" "),s("li",[t._v("在方法区中类静态属性引用的对象，譬如Java类的引用类型静态变量")]),t._v(" "),s("li",[t._v("在方法区中常量引用的对象，譬如字符串常量池里的引用。")]),t._v(" "),s("li",[t._v("在本地方法栈中JNI（即通常所说的Native方法）引用的对象")]),t._v(" "),s("li",[t._v("Java虚拟机内部的引用，如基本数据类型对应的Class对象，一些常驻的异常对象（比如NullPointException），还有系统类加载器。")]),t._v(" "),s("li",[t._v("所有被同步锁（synchronized关键字）持有的对象")]),t._v(" "),s("li",[t._v("反映Java虚拟机内部情况的JMXBean、JVMTI中注册的回调、本地代码缓存等")])]),t._v(" "),s("h2",{attrs:{id:"jvm有哪些垃圾回收算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm有哪些垃圾回收算法"}},[t._v("#")]),t._v(" JVM有哪些垃圾回收算法？")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("算法")]),t._v(" "),s("th",[t._v("速度")]),t._v(" "),s("th",[t._v("空间开销")]),t._v(" "),s("th",[t._v("移动对象")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Mark-Sweep")]),t._v(" "),s("td",[t._v("中等")]),t._v(" "),s("td",[t._v("少（但会堆积碎片）")]),t._v(" "),s("td",[t._v("否")])]),t._v(" "),s("tr",[s("td",[t._v("Mark-Compact")]),t._v(" "),s("td",[t._v("最慢")]),t._v(" "),s("td",[t._v("少（不堆积碎片）")]),t._v(" "),s("td",[t._v("是")])]),t._v(" "),s("tr",[s("td",[t._v("Copying")]),t._v(" "),s("td",[t._v("最快")]),t._v(" "),s("td",[t._v("通常需要活对象的2倍大小（不堆积碎片）")]),t._v(" "),s("td",[t._v("是")])])])]),t._v(" "),s("h2",{attrs:{id:"什么是stw"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是stw"}},[t._v("#")]),t._v(" 什么是STW？")]),t._v(" "),s("p",[t._v("STW：stop the world，是在垃圾回收算法执行过程当中，需要将JVM内存冻结的一种状态，在STW状态下，Java所有的线程都是停止执行的，GC线程除外，只有native方法可以执行，但是，不能与JVM交互，GC各种算法优化的重点，就是减少STW，同时这也是JVM调优的重点。")]),t._v(" "),s("h2",{attrs:{id:"jvm有哪些垃圾回收器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm有哪些垃圾回收器"}},[t._v("#")]),t._v(" JVM有哪些垃圾回收器？")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("收集器")]),t._v(" "),s("th",[t._v("串行、并行或并发")]),t._v(" "),s("th",[t._v("新生代、老年代")]),t._v(" "),s("th",[t._v("算法")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Serial")]),t._v(" "),s("td",[t._v("串行")]),t._v(" "),s("td",[t._v("新生代")]),t._v(" "),s("td",[t._v("复制算法")])]),t._v(" "),s("tr",[s("td",[t._v("Serial Old")]),t._v(" "),s("td",[t._v("串行")]),t._v(" "),s("td",[t._v("老年代")]),t._v(" "),s("td",[t._v("标记-整理")])]),t._v(" "),s("tr",[s("td",[t._v("ParNew")]),t._v(" "),s("td",[t._v("并行")]),t._v(" "),s("td",[t._v("新生代")]),t._v(" "),s("td",[t._v("复制算法")])]),t._v(" "),s("tr",[s("td",[t._v("Parallel Scavenge")]),t._v(" "),s("td",[t._v("并行")]),t._v(" "),s("td",[t._v("新生代")]),t._v(" "),s("td",[t._v("复制算法")])]),t._v(" "),s("tr",[s("td",[t._v("Parallel Old")]),t._v(" "),s("td",[t._v("并行")]),t._v(" "),s("td",[t._v("老年代")]),t._v(" "),s("td",[t._v("标记-整理")])]),t._v(" "),s("tr",[s("td",[t._v("CMS")]),t._v(" "),s("td",[t._v("并发")]),t._v(" "),s("td",[t._v("老年代")]),t._v(" "),s("td",[t._v("标记-清除")])]),t._v(" "),s("tr",[s("td",[t._v("G1")]),t._v(" "),s("td",[t._v("并发")]),t._v(" "),s("td",[t._v("不区分")]),t._v(" "),s("td",[t._v("标记-整理+复制算法")])])])]),t._v(" "),s("h2",{attrs:{id:"什么是三色标记算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是三色标记算法"}},[t._v("#")]),t._v(" 什么是三色标记算法？")]),t._v(" "),s("p",[t._v("CMS的核心算法就是三色标记。")]),t._v(" "),s("p",[t._v("三色标记：是一种逻辑上的抽象，将每个内存对象分成三种颜色：黑色：表示自己和成员变量都已经标记完毕。灰色：自己标记完了，但是成员变量还没有完全标记完。白色：自己未标记完。")]),t._v(" "),s("p",[t._v("CMS通过增量标记increment update的方式来解决漏标的问题。")]),t._v(" "),s("p",[t._v("在G1当中采用SATB的方式来避免错标和漏标的情况。")]),t._v(" "),s("h2",{attrs:{id:"如何回收方法区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何回收方法区"}},[t._v("#")]),t._v(" 如何回收方法区？")]),t._v(" "),s("p",[t._v("方法区的垃圾回收主要有两种，废弃的常量和无用的类，其中要称为无用的类，要同时满足下面三个条件：")]),t._v(" "),s("ul",[s("li",[t._v("Java堆中不存在该类的任何实例对象")]),t._v(" "),s("li",[t._v("加载该类的类加载器已经被回收")]),t._v(" "),s("li",[t._v("该类对应的java.lang.Class对象不在任何地方被引用，且无法在任何地方通过反射访问该类的方法")])]),t._v(" "),s("h2",{attrs:{id:"jvm-中的安全点和安全区各代表什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm-中的安全点和安全区各代表什么"}},[t._v("#")]),t._v(" JVM 中的安全点和安全区各代表什么？")]),t._v(" "),s("h2",{attrs:{id:"写屏障你了解吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#写屏障你了解吗"}},[t._v("#")]),t._v(" 写屏障你了解吗？")]),t._v(" "),s("h2",{attrs:{id:"解决并发扫描时对象消失问题的两种方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决并发扫描时对象消失问题的两种方案"}},[t._v("#")]),t._v(" 解决并发扫描时对象消失问题的两种方案？")]),t._v(" "),s("h2",{attrs:{id:"cms-垃圾收集器的步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cms-垃圾收集器的步骤"}},[t._v("#")]),t._v(" CMS 垃圾收集器的步骤？")]),t._v(" "),s("p",[t._v("1、初始标记阶段：STW 只标记出根对象直接引用的对象")]),t._v(" "),s("p",[t._v("2、并发标记：继续标记其他对象，与应用程序时并发执行")]),t._v(" "),s("p",[t._v("3、重新标记：STW对并发执行阶段的对象进行重新标记")]),t._v(" "),s("p",[t._v("4、并发清除：并行。将产生的垃圾清除。清除过程中，应用程序又会不断的产生新的垃圾，叫做浮动垃圾。这些垃圾就要留到下一次GC过程中清除。")]),t._v(" "),s("h2",{attrs:{id:"cms-有什么缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cms-有什么缺点"}},[t._v("#")]),t._v(" CMS 有什么缺点？")]),t._v(" "),s("ul",[s("li",[t._v("CMS收集器对CPU资源非常敏感")]),t._v(" "),s("li",[t._v("CMS处理器无法处理浮动垃圾")]),t._v(" "),s("li",[t._v("在收集结束的时候，会产生大量的空间碎片")])]),t._v(" "),s("h2",{attrs:{id:"g1垃圾收集器的步骤-g1有什么优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#g1垃圾收集器的步骤-g1有什么优缺点"}},[t._v("#")]),t._v(" G1垃圾收集器的步骤，G1有什么优缺点？")]),t._v(" "),s("p",[t._v("G1的优点：")]),t._v(" "),s("ul",[s("li",[t._v("停顿时间短")]),t._v(" "),s("li",[t._v("用户可以指定最大的停顿时间")]),t._v(" "),s("li",[t._v("不会产生内存碎片：G1的内存布局并不是固定大小以及固定数量的分代区域划分")])]),t._v(" "),s("p",[t._v("缺点：")]),t._v(" "),s("p",[t._v("G1需要记忆集（卡表）来记录新生代和老年代之间的引用关系，这种数据结构在G1中需要占用大量的内存，可能达到整个堆内存容量的20%甚至更多。而且G1中维护记忆集的成本较高，带来了更高的执行负载，影响效率。")]),t._v(" "),s("p",[t._v("CMS在小内存应用上的表现要优于G1，而大内存应用上G1更有优化，大小内存的界限是6GB到8GB。")]),t._v(" "),s("h2",{attrs:{id:"讲一下内存分配策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#讲一下内存分配策略"}},[t._v("#")]),t._v(" 讲一下内存分配策略？")]),t._v(" "),s("h2",{attrs:{id:"内存溢出和内存泄漏的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存溢出和内存泄漏的区别"}},[t._v("#")]),t._v(" 内存溢出和内存泄漏的区别？")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("内存溢出（Out of Memory）是指程序在申请内存时，没有足够的空间供其使用")])]),t._v(" "),s("li",[s("p",[t._v("内存泄漏（Memory Leak）是指程序在申请内存后，无法释放已申请的内存空间")])])]),t._v(" "),s("h2",{attrs:{id:"如何进行jvm调优"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何进行jvm调优"}},[t._v("#")]),t._v(" 如何进行JVM调优？")]),t._v(" "),s("p",[t._v("JVM调优主要是通过定制JVM运行参数来提高Java应用程序的运行速度。")]),t._v(" "),s("h2",{attrs:{id:"jvm参数有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm参数有哪些"}},[t._v("#")]),t._v(" JVM参数有哪些？")]),t._v(" "),s("p",[t._v("JVM参数大致可以分为三类：")]),t._v(" "),s("p",[t._v("１、标准指令：-开头，这些是所有的HotSpot都支持的参数。可以用Java -help打印出来。")]),t._v(" "),s("p",[t._v("２、非标准指令：-开头，这些指令通常是跟特定的HotSpot版本对应的，可以用Java -X打印出来")]),t._v(" "),s("p",[t._v("３、不稳定参数：-XX开头，这一类参数是跟特定HotSpot版本对应的，并且变化非常大，详细的文档资料非常少，在JDK1.8版本下，有几个常用的不稳定指令：Java -XX:+PrintCommandLineFlags：查看当前命令的不稳定指令。")]),t._v(" "),s("h2",{attrs:{id:"虚拟机基础故障处理工具有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚拟机基础故障处理工具有哪些"}},[t._v("#")]),t._v(" 虚拟机基础故障处理工具有哪些？")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("工具")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("jps")]),t._v(" "),s("td",[t._v("虚拟机进程状况工具")])]),t._v(" "),s("tr",[s("td",[t._v("jstat")]),t._v(" "),s("td",[t._v("虚拟机统计信息监视工具")])]),t._v(" "),s("tr",[s("td",[t._v("jinfo")]),t._v(" "),s("td",[t._v("Java配置信息工具")])]),t._v(" "),s("tr",[s("td",[t._v("jmap")]),t._v(" "),s("td",[t._v("Java内存映射工具")])]),t._v(" "),s("tr",[s("td",[t._v("jstack")]),t._v(" "),s("td",[t._v("Java堆栈跟踪工具")])]),t._v(" "),s("tr",[s("td",[t._v("JVisualVM")]),t._v(" "),s("td",[t._v("图形化展示")])]),t._v(" "),s("tr",[s("td",[t._v("JConsole")]),t._v(" "),s("td",[t._v("远程控制")])])])]),t._v(" "),s("h2",{attrs:{id:"怎么查看一个java进程的jvm参数-谈谈你了解的jvm参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么查看一个java进程的jvm参数-谈谈你了解的jvm参数"}},[t._v("#")]),t._v(" 怎么查看一个Java进程的JVM参数，谈谈你了解的JVM参数")]),t._v(" "),s("p",[t._v("打印出所有不稳定参数所有默认值："),s("code",[t._v("java -XX:+PrintFlagsInitial")])]),t._v(" "),s("p",[t._v("打印出所有最终生效的不稳定指令："),s("code",[t._v("java -XX:+PrintFlagsFinal")])]),t._v(" "),s("h2",{attrs:{id:"什么情况下堆内存会溢出-什么情况方法区会内存溢出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么情况下堆内存会溢出-什么情况方法区会内存溢出"}},[t._v("#")]),t._v(" 什么情况下堆内存会溢出，什么情况方法区会内存溢出？")]),t._v(" "),s("p",[t._v("栈溢出的典型例子：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//递归，调用自己")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("方法区内存溢出的例子：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//递归，调用自己")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])])])}),[],!1,null,null,null);a.default=v.exports}}]);
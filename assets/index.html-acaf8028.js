const l=JSON.parse('{"key":"v-99546d68","path":"/java_basics/functional_programming/","title":"函数式编程概览","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"函数式编程的意义","slug":"函数式编程的意义","link":"#函数式编程的意义","children":[]},{"level":2,"title":"Lambda表达式和匿名内部类","slug":"lambda表达式和匿名内部类","link":"#lambda表达式和匿名内部类","children":[]},{"level":2,"title":"Lambda表达式和Stream","slug":"lambda表达式和stream","link":"#lambda表达式和stream","children":[]},{"level":2,"title":"函数式接口定义","slug":"函数式接口定义","link":"#函数式接口定义","children":[]},{"level":2,"title":"为什么是函数式接口？","slug":"为什么是函数式接口","link":"#为什么是函数式接口","children":[]},{"level":2,"title":"常见的函数式接口","slug":"常见的函数式接口","link":"#常见的函数式接口","children":[{"level":3,"title":"Consumer函数式接口","slug":"consumer函数式接口","link":"#consumer函数式接口","children":[]},{"level":3,"title":"Function函数式接口","slug":"function函数式接口","link":"#function函数式接口","children":[]},{"level":3,"title":"Predicate函数式接口","slug":"predicate函数式接口","link":"#predicate函数式接口","children":[]},{"level":3,"title":"Supplier函数式接口","slug":"supplier函数式接口","link":"#supplier函数式接口","children":[]}]},{"level":2,"title":"函数式接口扩展","slug":"函数式接口扩展","link":"#函数式接口扩展","children":[]},{"level":2,"title":"方法引用","slug":"方法引用","link":"#方法引用","children":[{"level":3,"title":"静态方法引用","slug":"静态方法引用","link":"#静态方法引用","children":[]},{"level":3,"title":"实例方法引用","slug":"实例方法引用","link":"#实例方法引用","children":[]},{"level":3,"title":"实例方法名引用","slug":"实例方法名引用","link":"#实例方法名引用","children":[]},{"level":3,"title":"构造方法引用","slug":"构造方法引用","link":"#构造方法引用","children":[]},{"level":3,"title":"默认方法","slug":"默认方法","link":"#默认方法","children":[]}]},{"level":2,"title":"Stream类源码解析","slug":"stream类源码解析","link":"#stream类源码解析","children":[]},{"level":2,"title":"Stream实例剖析","slug":"stream实例剖析","link":"#stream实例剖析","children":[]},{"level":2,"title":"Stream陷阱剖析","slug":"stream陷阱剖析","link":"#stream陷阱剖析","children":[]},{"level":2,"title":"内部迭代和外部迭代","slug":"内部迭代和外部迭代","link":"#内部迭代和外部迭代","children":[]},{"level":2,"title":"流的短路与并发流","slug":"流的短路与并发流","link":"#流的短路与并发流","children":[]},{"level":2,"title":"分区与分组","slug":"分区与分组","link":"#分区与分组","children":[]},{"level":2,"title":"Comparator源码分析及实践","slug":"comparator源码分析及实践","link":"#comparator源码分析及实践","children":[]},{"level":2,"title":"Collector源码分析","slug":"collector源码分析","link":"#collector源码分析","children":[]},{"level":2,"title":"Collector实践","slug":"collector实践","link":"#collector实践","children":[]},{"level":2,"title":"自定义Collector","slug":"自定义collector","link":"#自定义collector","children":[]},{"level":2,"title":"Collectors源码分析","slug":"collectors源码分析","link":"#collectors源码分析","children":[]},{"level":2,"title":"Stream源码分析","slug":"stream源码分析","link":"#stream源码分析","children":[]},{"level":2,"title":"Spliterator源码分析","slug":"spliterator源码分析","link":"#spliterator源码分析","children":[]},{"level":2,"title":"Pipeline源码分析","slug":"pipeline源码分析","link":"#pipeline源码分析","children":[]},{"level":2,"title":"流调用机制与原理","slug":"流调用机制与原理","link":"#流调用机制与原理","children":[]},{"level":2,"title":"Sink源码分析","slug":"sink源码分析","link":"#sink源码分析","children":[]},{"level":2,"title":"Stream调用流程","slug":"stream调用流程","link":"#stream调用流程","children":[]}],"git":{"updatedTime":1701414117000,"contributors":[{"name":"jiyongchao","email":"jycoder@163.com","commits":1}]},"filePathRelative":"java_basics/functional_programming/README.md"}');export{l as data};

const e=JSON.parse('{"key":"v-8bae5d16","path":"/framework/spring_aop/","title":"Spring AOP","lang":"zh-CN","frontmatter":{"title":"Spring AOP","date":"2021-06-29T00:00:00.000Z","tags":"Spring","author":"吉永超"},"headers":[{"level":2,"title":"知识储备","slug":"知识储备","link":"#知识储备","children":[{"level":3,"title":"Java 基础部分","slug":"java-基础部分","link":"#java-基础部分","children":[]},{"level":3,"title":"OOP 部分","slug":"oop-部分","link":"#oop-部分","children":[]},{"level":3,"title":"GOF23 设计模式","slug":"gof23-设计模式","link":"#gof23-设计模式","children":[]},{"level":3,"title":"Spring 核心基础","slug":"spring-核心基础","link":"#spring-核心基础","children":[]},{"level":3,"title":"OOP局限性","slug":"oop局限性","link":"#oop局限性","children":[]}]},{"level":2,"title":"AOP常见使用场景","slug":"aop常见使用场景","link":"#aop常见使用场景","children":[{"level":3,"title":"日志场景","slug":"日志场景","link":"#日志场景","children":[]},{"level":3,"title":"统计场景","slug":"统计场景","link":"#统计场景","children":[]},{"level":3,"title":"安防场景","slug":"安防场景","link":"#安防场景","children":[]},{"level":3,"title":"性能场景","slug":"性能场景","link":"#性能场景","children":[]}]},{"level":2,"title":"Java AOP设计模式","slug":"java-aop设计模式","link":"#java-aop设计模式","children":[{"level":3,"title":"代理模式","slug":"代理模式","link":"#代理模式","children":[]},{"level":3,"title":"判断模式","slug":"判断模式","link":"#判断模式","children":[]},{"level":3,"title":"拦截模式","slug":"拦截模式","link":"#拦截模式","children":[]}]},{"level":2,"title":"Spring AOP 功能概述","slug":"spring-aop-功能概述","link":"#spring-aop-功能概述","children":[{"level":3,"title":"AOP设计核心","slug":"aop设计核心","link":"#aop设计核心","children":[]},{"level":3,"title":"Spring AOP编程模型","slug":"spring-aop编程模型","link":"#spring-aop编程模型","children":[]},{"level":3,"title":"Spring AOP Advice类型","slug":"spring-aop-advice类型","link":"#spring-aop-advice类型","children":[]},{"level":3,"title":"Spring AOP代理实现","slug":"spring-aop代理实现","link":"#spring-aop代理实现","children":[]}]},{"level":2,"title":"面试题","slug":"面试题","link":"#面试题","children":[{"level":3,"title":"Spring AOP和AspectJ AOP存在哪些差别？","slug":"spring-aop和aspectj-aop存在哪些差别","link":"#spring-aop和aspectj-aop存在哪些差别","children":[]}]},{"level":2,"title":"@AspectJ注解驱动","slug":"aspectj注解驱动","link":"#aspectj注解驱动","children":[]},{"level":2,"title":"编程方式创建@AspectJ代理","slug":"编程方式创建-aspectj代理","link":"#编程方式创建-aspectj代理","children":[]},{"level":2,"title":"标准工厂API","slug":"标准工厂api","link":"#标准工厂api","children":[]},{"level":2,"title":"@AspectJ Pointcut指令与表达式","slug":"aspectj-pointcut指令与表达式","link":"#aspectj-pointcut指令与表达式","children":[]},{"level":2,"title":"XML配置Pointcut","slug":"xml配置pointcut","link":"#xml配置pointcut","children":[]},{"level":2,"title":"API实现Pointcut","slug":"api实现pointcut","link":"#api实现pointcut","children":[]},{"level":2,"title":"@AspectJ拦截动作","slug":"aspectj拦截动作","link":"#aspectj拦截动作","children":[]},{"level":2,"title":"XML配置Around Advice","slug":"xml配置around-advice","link":"#xml配置around-advice","children":[]},{"level":2,"title":"@AspectJ的前置动作","slug":"aspectj的前置动作","link":"#aspectj的前置动作","children":[]},{"level":2,"title":"XML配置Before Advice","slug":"xml配置before-advice","link":"#xml配置before-advice","children":[]},{"level":2,"title":"@Aspect后置动作","slug":"aspect后置动作","link":"#aspect后置动作","children":[]},{"level":2,"title":"XML配置After Advice","slug":"xml配置after-advice","link":"#xml配置after-advice","children":[]},{"level":2,"title":"API实现After Advice","slug":"api实现after-advice","link":"#api实现after-advice","children":[]},{"level":2,"title":"自动动态代理","slug":"自动动态代理","link":"#自动动态代理","children":[]},{"level":2,"title":"替换TargetSource","slug":"替换targetsource","link":"#替换targetsource","children":[]},{"level":2,"title":"面试题","slug":"面试题-1","link":"#面试题-1","children":[{"level":3,"title":"Spring AOP支持哪些类型的Advice？","slug":"spring-aop支持哪些类型的advice","link":"#spring-aop支持哪些类型的advice","children":[]},{"level":3,"title":"Spring AOP编程模型有哪些，代表组件有哪些？","slug":"spring-aop编程模型有哪些-代表组件有哪些","link":"#spring-aop编程模型有哪些-代表组件有哪些","children":[]},{"level":3,"title":"Spring AOP三种实现方式是如何进行设计的？","slug":"spring-aop三种实现方式是如何进行设计的","link":"#spring-aop三种实现方式是如何进行设计的","children":[]}]},{"level":2,"title":"API整体设计","slug":"api整体设计","link":"#api整体设计","children":[]},{"level":2,"title":"接入点接口Joinpoint","slug":"接入点接口joinpoint","link":"#接入点接口joinpoint","children":[]},{"level":2,"title":"Joinpoint条件接口","slug":"joinpoint条件接口","link":"#joinpoint条件接口","children":[]},{"level":2,"title":"Pointcut组合实现","slug":"pointcut组合实现","link":"#pointcut组合实现","children":[]},{"level":2,"title":"Pointcut便利实现","slug":"pointcut便利实现","link":"#pointcut便利实现","children":[]},{"level":2,"title":"Pointcut AspectJ实现","slug":"pointcut-aspectj实现","link":"#pointcut-aspectj实现","children":[]},{"level":2,"title":"Joinpoint执行动作接口","slug":"joinpoint执行动作接口","link":"#joinpoint执行动作接口","children":[]},{"level":2,"title":"Before Advice标准实现","slug":"before-advice标准实现","link":"#before-advice标准实现","children":[]},{"level":2,"title":"Before Advice AspectJ实现","slug":"before-advice-aspectj实现","link":"#before-advice-aspectj实现","children":[]},{"level":2,"title":"After Advice标准实现","slug":"after-advice标准实现","link":"#after-advice标准实现","children":[]},{"level":2,"title":"After Advice AspectJ实现","slug":"after-advice-aspectj实现","link":"#after-advice-aspectj实现","children":[]},{"level":2,"title":"Advisor接口","slug":"advisor接口","link":"#advisor接口","children":[]},{"level":2,"title":"PointcutAdvisor接口","slug":"pointcutadvisor接口","link":"#pointcutadvisor接口","children":[]},{"level":2,"title":"IntorductionAdvisor接口","slug":"intorductionadvisor接口","link":"#intorductionadvisor接口","children":[]},{"level":2,"title":"AdvisorAdapter接口","slug":"advisoradapter接口","link":"#advisoradapter接口","children":[]},{"level":2,"title":"AopProxy接口","slug":"aopproxy接口","link":"#aopproxy接口","children":[]},{"level":2,"title":"AopProxyFactory","slug":"aopproxyfactory","link":"#aopproxyfactory","children":[]},{"level":2,"title":"JDK AopProxy实现","slug":"jdk-aopproxy实现","link":"#jdk-aopproxy实现","children":[]},{"level":2,"title":"CGLIB AopProxy实现","slug":"cglib-aopproxy实现","link":"#cglib-aopproxy实现","children":[]},{"level":2,"title":"AdvisedSupport","slug":"advisedsupport","link":"#advisedsupport","children":[]},{"level":2,"title":"AdvisorChainFactory接口","slug":"advisorchainfactory接口","link":"#advisorchainfactory接口","children":[]},{"level":2,"title":"TargetSource接口","slug":"targetsource接口","link":"#targetsource接口","children":[]},{"level":2,"title":"ProxyCreatorSupport","slug":"proxycreatorsupport","link":"#proxycreatorsupport","children":[]},{"level":2,"title":"AdvisedSupportListener","slug":"advisedsupportlistener","link":"#advisedsupportlistener","children":[]},{"level":2,"title":"ProxyFactory","slug":"proxyfactory","link":"#proxyfactory","children":[]},{"level":2,"title":"ProxyFactoryBean","slug":"proxyfactorybean","link":"#proxyfactorybean","children":[]},{"level":2,"title":"AspectJProxyFactory","slug":"aspectjproxyfactory","link":"#aspectjproxyfactory","children":[]},{"level":2,"title":"AbstractAutoProxyCreator","slug":"abstractautoproxycreator","link":"#abstractautoproxycreator","children":[]},{"level":2,"title":"IoC容器自动代理标准实现","slug":"ioc容器自动代理标准实现","link":"#ioc容器自动代理标准实现","children":[]},{"level":2,"title":"AspectJAwareAdvisorAutoProxyCreator","slug":"aspectjawareadvisorautoproxycreator","link":"#aspectjawareadvisorautoproxycreator","children":[]},{"level":2,"title":"AopInfrastructureBean接口","slug":"aopinfrastructurebean接口","link":"#aopinfrastructurebean接口","children":[]},{"level":2,"title":"AopContext","slug":"aopcontext","link":"#aopcontext","children":[]},{"level":2,"title":"AopProxyUtils","slug":"aopproxyutils","link":"#aopproxyutils","children":[]},{"level":2,"title":"AopUtils","slug":"aoputils","link":"#aoputils","children":[]},{"level":2,"title":"AspectJ Enable模块驱动","slug":"aspectj-enable模块驱动","link":"#aspectj-enable模块驱动","children":[]},{"level":2,"title":"AspectJ XML配置驱动实现","slug":"aspectj-xml配置驱动实现","link":"#aspectj-xml配置驱动实现","children":[]},{"level":2,"title":"<aop:config /> Schema-based实现","slug":"aop-config-schema-based实现","link":"#aop-config-schema-based实现","children":[]},{"level":2,"title":"<aop:aspect /> Schema-based实现","slug":"aop-aspect-schema-based实现","link":"#aop-aspect-schema-based实现","children":[]},{"level":2,"title":"Pointcut Schema-based实现","slug":"pointcut-schema-based实现","link":"#pointcut-schema-based实现","children":[]},{"level":2,"title":"Around Advice Schema-based实现","slug":"around-advice-schema-based实现","link":"#around-advice-schema-based实现","children":[]},{"level":2,"title":"Before Advice Schema-based实现","slug":"before-advice-schema-based实现","link":"#before-advice-schema-based实现","children":[]},{"level":2,"title":"After Advice Schema-based实现","slug":"after-advice-schema-based实现","link":"#after-advice-schema-based实现","children":[]},{"level":2,"title":"After Returning Advice Schema-based实现","slug":"after-returning-advice-schema-based实现","link":"#after-returning-advice-schema-based实现","children":[]},{"level":2,"title":"After Throwing Advice Schema-based实现","slug":"after-throwing-advice-schema-based实现","link":"#after-throwing-advice-schema-based实现","children":[]},{"level":2,"title":"Advisor Schema-based实现","slug":"advisor-schema-based实现","link":"#advisor-schema-based实现","children":[]},{"level":2,"title":"Introduction Schema-based实现","slug":"introduction-schema-based实现","link":"#introduction-schema-based实现","children":[]},{"level":2,"title":"作用域代理Schema-based实现","slug":"作用域代理schema-based实现","link":"#作用域代理schema-based实现","children":[]},{"level":2,"title":"面试题","slug":"面试题-2","link":"#面试题-2","children":[{"level":3,"title":"Spring AOP Advice XML标签有哪些？","slug":"spring-aop-advice-xml标签有哪些","link":"#spring-aop-advice-xml标签有哪些","children":[]},{"level":3,"title":"请解释Spring @EnbaleAspectJAutoProxy的原理？","slug":"请解释spring-enbaleaspectjautoproxy的原理","link":"#请解释spring-enbaleaspectjautoproxy的原理","children":[]},{"level":3,"title":"Spring Configuration Class CGLIB提升与AOP类代理的关系？","slug":"spring-configuration-class-cglib提升与aop类代理的关系","link":"#spring-configuration-class-cglib提升与aop类代理的关系","children":[]}]},{"level":2,"title":"创建型模式","slug":"创建型模式","link":"#创建型模式","children":[{"level":3,"title":"抽象工厂模式","slug":"抽象工厂模式","link":"#抽象工厂模式","children":[]},{"level":3,"title":"构建器模式","slug":"构建器模式","link":"#构建器模式","children":[]},{"level":3,"title":"工厂方法模式","slug":"工厂方法模式","link":"#工厂方法模式","children":[]},{"level":3,"title":"原型模式","slug":"原型模式","link":"#原型模式","children":[]},{"level":3,"title":"单例模式","slug":"单例模式","link":"#单例模式","children":[]}]},{"level":2,"title":"结构型模式","slug":"结构型模式","link":"#结构型模式","children":[{"level":3,"title":"适配器模式","slug":"适配器模式","link":"#适配器模式","children":[]},{"level":3,"title":"组合模式","slug":"组合模式","link":"#组合模式","children":[]},{"level":3,"title":"装饰器模式","slug":"装饰器模式","link":"#装饰器模式","children":[]},{"level":3,"title":"享元模式","slug":"享元模式","link":"#享元模式","children":[]},{"level":3,"title":"代理模式","slug":"代理模式-1","link":"#代理模式-1","children":[]}]},{"level":2,"title":"行为型模式","slug":"行为型模式","link":"#行为型模式","children":[{"level":3,"title":"模板方法模式","slug":"模板方法模式","link":"#模板方法模式","children":[]},{"level":3,"title":"责任链模式","slug":"责任链模式","link":"#责任链模式","children":[]},{"level":3,"title":"观察者模式","slug":"观察者模式","link":"#观察者模式","children":[]},{"level":3,"title":"策略模式","slug":"策略模式","link":"#策略模式","children":[]},{"level":3,"title":"命令模式","slug":"命令模式","link":"#命令模式","children":[]},{"level":3,"title":"状态模式","slug":"状态模式","link":"#状态模式","children":[]}]},{"level":2,"title":"面试题","slug":"面试题-3","link":"#面试题-3","children":[{"level":3,"title":"GOF 23设计模式和它的归类？","slug":"gof-23设计模式和它的归类","link":"#gof-23设计模式和它的归类","children":[]},{"level":3,"title":"举例装饰器模式和代理模式的区别？","slug":"举例装饰器模式和代理模式的区别","link":"#举例装饰器模式和代理模式的区别","children":[]},{"level":3,"title":"请举例说明Spring Framework中使用设计模式的实现？","slug":"请举例说明spring-framework中使用设计模式的实现","link":"#请举例说明spring-framework中使用设计模式的实现","children":[]}]},{"level":2,"title":"Spring 事件中的应用","slug":"spring-事件中的应用","link":"#spring-事件中的应用","children":[]},{"level":2,"title":"Spring事务中的应用","slug":"spring事务中的应用","link":"#spring事务中的应用","children":[{"level":3,"title":"核心API","slug":"核心api","link":"#核心api","children":[]},{"level":3,"title":"理解TransactionDefinition","slug":"理解transactiondefinition","link":"#理解transactiondefinition","children":[]},{"level":3,"title":"理解PlatformTransactionManager","slug":"理解platformtransactionmanager","link":"#理解platformtransactionmanager","children":[]},{"level":3,"title":"理解事务传播","slug":"理解事务传播","link":"#理解事务传播","children":[]}]},{"level":2,"title":"Spring 缓存中的应用","slug":"spring-缓存中的应用","link":"#spring-缓存中的应用","children":[]},{"level":2,"title":"Spring本地调度中的应用","slug":"spring本地调度中的应用","link":"#spring本地调度中的应用","children":[]},{"level":2,"title":"面试题","slug":"面试题-4","link":"#面试题-4","children":[{"level":3,"title":"Spring AOP在Spring Framework特性运用？","slug":"spring-aop在spring-framework特性运用","link":"#spring-aop在spring-framework特性运用","children":[]},{"level":3,"title":"Spring事务传播的原理？","slug":"spring事务传播的原理","link":"#spring事务传播的原理","children":[]},{"level":3,"title":"Spring AOP与IoC功能整合的设计模式？","slug":"spring-aop与ioc功能整合的设计模式","link":"#spring-aop与ioc功能整合的设计模式","children":[]}]}],"git":{"updatedTime":1709691746000,"contributors":[{"name":"jiyongchao","email":"jycoder@163.com","commits":1}]},"filePathRelative":"framework/spring_aop/README.md"}');export{e as data};

const l=JSON.parse('{"key":"v-e2ae1a0e","path":"/framework/spring_framework/","title":"SpringFramework","lang":"zh-CN","frontmatter":{"title":"SpringFramework","date":"2020-07-16T00:00:00.000Z","categories":["Spring"],"tags":["Spring","SpringBoot","Java"],"author":"吉永超","top":2},"headers":[{"level":2,"title":"Spring特性总览","slug":"spring特性总览","link":"#spring特性总览","children":[{"level":3,"title":"Spring 中值得学习的地方","slug":"spring-中值得学习的地方","link":"#spring-中值得学习的地方","children":[]},{"level":3,"title":"Spring核心特性","slug":"spring核心特性","link":"#spring核心特性","children":[]},{"level":3,"title":"Spring数据存储","slug":"spring数据存储","link":"#spring数据存储","children":[]},{"level":3,"title":"Spring Web技术","slug":"spring-web技术","link":"#spring-web技术","children":[]},{"level":3,"title":"Spring技术整合","slug":"spring技术整合","link":"#spring技术整合","children":[]},{"level":3,"title":"Spring测试","slug":"spring测试","link":"#spring测试","children":[]}]},{"level":2,"title":"Spring版本特性","slug":"spring版本特性","link":"#spring版本特性","children":[]},{"level":2,"title":"Spring模块化设计","slug":"spring模块化设计","link":"#spring模块化设计","children":[]},{"level":2,"title":"Spring编程模型","slug":"spring编程模型","link":"#spring编程模型","children":[]},{"level":2,"title":"Spring的核心价值","slug":"spring的核心价值","link":"#spring的核心价值","children":[]},{"level":2,"title":"面试题","slug":"面试题","link":"#面试题","children":[{"level":3,"title":"什么是Spring Framework？","slug":"什么是spring-framework","link":"#什么是spring-framework","children":[]},{"level":3,"title":"Spring Framwork有哪些核心模块？","slug":"spring-framwork有哪些核心模块","link":"#spring-framwork有哪些核心模块","children":[]},{"level":3,"title":"Spring Framework的优势和不足是什么？","slug":"spring-framework的优势和不足是什么","link":"#spring-framework的优势和不足是什么","children":[]}]},{"level":2,"title":"IoC的发展简介","slug":"ioc的发展简介","link":"#ioc的发展简介","children":[]},{"level":2,"title":"IoC主要实现策略","slug":"ioc主要实现策略","link":"#ioc主要实现策略","children":[]},{"level":2,"title":"IoC容器的职责","slug":"ioc容器的职责","link":"#ioc容器的职责","children":[]},{"level":2,"title":"IoC的实现","slug":"ioc的实现","link":"#ioc的实现","children":[]},{"level":2,"title":"传统IoC容器的实现","slug":"传统ioc容器的实现","link":"#传统ioc容器的实现","children":[]},{"level":2,"title":"如何界定IoC容器是轻量级的？","slug":"如何界定ioc容器是轻量级的","link":"#如何界定ioc容器是轻量级的","children":[]},{"level":2,"title":"依赖查找和依赖注入","slug":"依赖查找和依赖注入","link":"#依赖查找和依赖注入","children":[]},{"level":2,"title":"构造器注入和Setter注入","slug":"构造器注入和setter注入","link":"#构造器注入和setter注入","children":[]},{"level":2,"title":"面试题","slug":"面试题-1","link":"#面试题-1","children":[{"level":3,"title":"什么是IoC？","slug":"什么是ioc","link":"#什么是ioc","children":[]},{"level":3,"title":"依赖查找和依赖注入的区别？","slug":"依赖查找和依赖注入的区别","link":"#依赖查找和依赖注入的区别","children":[]},{"level":3,"title":"Spring作为IoC容器有什么优势？","slug":"spring作为ioc容器有什么优势","link":"#spring作为ioc容器有什么优势","children":[]}]},{"level":2,"title":"Spring IoC依赖查找","slug":"spring-ioc依赖查找","link":"#spring-ioc依赖查找","children":[]},{"level":2,"title":"Spring IoC依赖注入","slug":"spring-ioc依赖注入","link":"#spring-ioc依赖注入","children":[]},{"level":2,"title":"Spring依赖注入和依赖查找的来源","slug":"spring依赖注入和依赖查找的来源","link":"#spring依赖注入和依赖查找的来源","children":[]},{"level":2,"title":"Spring IoC配置元信息","slug":"spring-ioc配置元信息","link":"#spring-ioc配置元信息","children":[]},{"level":2,"title":"BeanFactory和ApplicationContext","slug":"beanfactory和applicationcontext","link":"#beanfactory和applicationcontext","children":[]},{"level":2,"title":"Spring IoC容器生命周期","slug":"spring-ioc容器生命周期","link":"#spring-ioc容器生命周期","children":[]},{"level":2,"title":"面试题","slug":"面试题-2","link":"#面试题-2","children":[{"level":3,"title":"什么是Spring IoC容器","slug":"什么是spring-ioc容器","link":"#什么是spring-ioc容器","children":[]},{"level":3,"title":"BeanFactory和FactoryBean","slug":"beanfactory和factorybean","link":"#beanfactory和factorybean","children":[]},{"level":3,"title":"Spring IoC容器启动时做了哪些准备？","slug":"spring-ioc容器启动时做了哪些准备","link":"#spring-ioc容器启动时做了哪些准备","children":[]}]},{"level":2,"title":"BeanDefinition","slug":"beandefinition","link":"#beandefinition","children":[]},{"level":2,"title":"Spring Bean命名","slug":"spring-bean命名","link":"#spring-bean命名","children":[]},{"level":2,"title":"BeanDefinition注册到IoC容器","slug":"beandefinition注册到ioc容器","link":"#beandefinition注册到ioc容器","children":[]},{"level":2,"title":"实例化Bean的方式","slug":"实例化bean的方式","link":"#实例化bean的方式","children":[]},{"level":2,"title":"延迟初始化Bean","slug":"延迟初始化bean","link":"#延迟初始化bean","children":[]},{"level":2,"title":"销毁Bean","slug":"销毁bean","link":"#销毁bean","children":[]},{"level":2,"title":"垃圾回收Spring Bean","slug":"垃圾回收spring-bean","link":"#垃圾回收spring-bean","children":[]},{"level":2,"title":"面试题","slug":"面试题-3","link":"#面试题-3","children":[{"level":3,"title":"如何注册一个Spring Bean？","slug":"如何注册一个spring-bean","link":"#如何注册一个spring-bean","children":[]},{"level":3,"title":"什么是Spring BeanDefinition？","slug":"什么是spring-beandefinition","link":"#什么是spring-beandefinition","children":[]},{"level":3,"title":"Spring容器是怎样管理注册Bean","slug":"spring容器是怎样管理注册bean","link":"#spring容器是怎样管理注册bean","children":[]}]},{"level":2,"title":"依赖查找简介","slug":"依赖查找简介","link":"#依赖查找简介","children":[]},{"level":2,"title":"单一类型依赖查找","slug":"单一类型依赖查找","link":"#单一类型依赖查找","children":[]},{"level":2,"title":"集合类型依赖查找","slug":"集合类型依赖查找","link":"#集合类型依赖查找","children":[]},{"level":2,"title":"层次性依赖查找","slug":"层次性依赖查找","link":"#层次性依赖查找","children":[]},{"level":2,"title":"延迟依赖查找","slug":"延迟依赖查找","link":"#延迟依赖查找","children":[]},{"level":2,"title":"安全依赖查找","slug":"安全依赖查找","link":"#安全依赖查找","children":[]},{"level":2,"title":"内建可查找的依赖","slug":"内建可查找的依赖","link":"#内建可查找的依赖","children":[]},{"level":2,"title":"依赖查找中典型异常","slug":"依赖查找中典型异常","link":"#依赖查找中典型异常","children":[]},{"level":2,"title":"面试题","slug":"面试题-4","link":"#面试题-4","children":[{"level":3,"title":"ObjectFactory与BeanFactory的区别","slug":"objectfactory与beanfactory的区别","link":"#objectfactory与beanfactory的区别","children":[]},{"level":3,"title":"BeanFactory.getBean操作是否线程安全？","slug":"beanfactory-getbean操作是否线程安全","link":"#beanfactory-getbean操作是否线程安全","children":[]},{"level":3,"title":"Spring的依赖查找和依赖注入在来源上有什么区别？","slug":"spring的依赖查找和依赖注入在来源上有什么区别","link":"#spring的依赖查找和依赖注入在来源上有什么区别","children":[]}]},{"level":2,"title":"依赖注入的模式和类型","slug":"依赖注入的模式和类型","link":"#依赖注入的模式和类型","children":[]},{"level":2,"title":"自动绑定","slug":"自动绑定","link":"#自动绑定","children":[]},{"level":2,"title":"Setter注入","slug":"setter注入","link":"#setter注入","children":[]},{"level":2,"title":"构造器注入","slug":"构造器注入","link":"#构造器注入","children":[]},{"level":2,"title":"字段注入","slug":"字段注入","link":"#字段注入","children":[]},{"level":2,"title":"方法注入","slug":"方法注入","link":"#方法注入","children":[]},{"level":2,"title":"接口回调注入","slug":"接口回调注入","link":"#接口回调注入","children":[]},{"level":2,"title":"依赖注入类型选择","slug":"依赖注入类型选择","link":"#依赖注入类型选择","children":[]},{"level":2,"title":"基础类型注入","slug":"基础类型注入","link":"#基础类型注入","children":[]},{"level":2,"title":"集合类型注入","slug":"集合类型注入","link":"#集合类型注入","children":[]},{"level":2,"title":"限定注入","slug":"限定注入","link":"#限定注入","children":[]},{"level":2,"title":"延迟依赖注入","slug":"延迟依赖注入","link":"#延迟依赖注入","children":[]},{"level":2,"title":"依赖处理的过程","slug":"依赖处理的过程","link":"#依赖处理的过程","children":[]},{"level":2,"title":"@Autowird注入","slug":"autowird注入","link":"#autowird注入","children":[]},{"level":2,"title":"@Inject和@Autowired联系","slug":"inject和-autowired联系","link":"#inject和-autowired联系","children":[]},{"level":2,"title":"Java通用注解原理","slug":"java通用注解原理","link":"#java通用注解原理","children":[]},{"level":2,"title":"自定义依赖注入注解","slug":"自定义依赖注入注解","link":"#自定义依赖注入注解","children":[]},{"level":2,"title":"面试题","slug":"面试题-5","link":"#面试题-5","children":[{"level":3,"title":"有多少种依赖注入的方式","slug":"有多少种依赖注入的方式","link":"#有多少种依赖注入的方式","children":[]},{"level":3,"title":"你偏好构造器注入还是Setter注入?","slug":"你偏好构造器注入还是setter注入","link":"#你偏好构造器注入还是setter注入","children":[]},{"level":3,"title":"Spring依赖注入的来源有哪些？","slug":"spring依赖注入的来源有哪些","link":"#spring依赖注入的来源有哪些","children":[]}]},{"level":2,"title":"依赖查找的来源","slug":"依赖查找的来源","link":"#依赖查找的来源","children":[]},{"level":2,"title":"依赖注入的来源","slug":"依赖注入的来源","link":"#依赖注入的来源","children":[]},{"level":2,"title":"Spring容器管理和游离对象","slug":"spring容器管理和游离对象","link":"#spring容器管理和游离对象","children":[]},{"level":2,"title":"Spring BeanDefinition作为依赖来源","slug":"spring-beandefinition作为依赖来源","link":"#spring-beandefinition作为依赖来源","children":[]},{"level":2,"title":"单体对象作为依赖来源","slug":"单体对象作为依赖来源","link":"#单体对象作为依赖来源","children":[]},{"level":2,"title":"Resolvable Dependency作为依赖来源","slug":"resolvable-dependency作为依赖来源","link":"#resolvable-dependency作为依赖来源","children":[]},{"level":2,"title":"外部化配置作为依赖来源","slug":"外部化配置作为依赖来源","link":"#外部化配置作为依赖来源","children":[]},{"level":2,"title":"面试题","slug":"面试题-6","link":"#面试题-6","children":[{"level":3,"title":"依赖注入和依赖查找的依赖来源是否相同？","slug":"依赖注入和依赖查找的依赖来源是否相同","link":"#依赖注入和依赖查找的依赖来源是否相同","children":[]},{"level":3,"title":"单例对象能在IoC容器启动后注册吗？","slug":"单例对象能在ioc容器启动后注册吗","link":"#单例对象能在ioc容器启动后注册吗","children":[]},{"level":3,"title":"Spring依赖注入的来源有哪些？","slug":"spring依赖注入的来源有哪些-1","link":"#spring依赖注入的来源有哪些-1","children":[]}]},{"level":2,"title":"作用域简介","slug":"作用域简介","link":"#作用域简介","children":[]},{"level":2,"title":"singleton作用域","slug":"singleton作用域","link":"#singleton作用域","children":[]},{"level":2,"title":"prototype作用域","slug":"prototype作用域","link":"#prototype作用域","children":[]},{"level":2,"title":"request作用域","slug":"request作用域","link":"#request作用域","children":[]},{"level":2,"title":"session作用域","slug":"session作用域","link":"#session作用域","children":[]},{"level":2,"title":"application作用域","slug":"application作用域","link":"#application作用域","children":[]},{"level":2,"title":"自定义Bean作用域","slug":"自定义bean作用域","link":"#自定义bean作用域","children":[]},{"level":2,"title":"面试题","slug":"面试题-7","link":"#面试题-7","children":[{"level":3,"title":"Spring内建的Bean的作用域有几种？","slug":"spring内建的bean的作用域有几种","link":"#spring内建的bean的作用域有几种","children":[]},{"level":3,"title":"singleton Bean是否在一个应用中是唯一的？","slug":"singleton-bean是否在一个应用中是唯一的","link":"#singleton-bean是否在一个应用中是唯一的","children":[]},{"level":3,"title":"\\"application\\" Bean是否被其他方案他替代？","slug":"application-bean是否被其他方案他替代","link":"#application-bean是否被其他方案他替代","children":[]}]},{"level":2,"title":"元信息配置阶段","slug":"元信息配置阶段","link":"#元信息配置阶段","children":[]},{"level":2,"title":"元信息解析阶段","slug":"元信息解析阶段","link":"#元信息解析阶段","children":[]},{"level":2,"title":"注册阶段","slug":"注册阶段","link":"#注册阶段","children":[]},{"level":2,"title":"BeanDefinition合并阶段","slug":"beandefinition合并阶段","link":"#beandefinition合并阶段","children":[]},{"level":2,"title":"Bean Class加载阶段","slug":"bean-class加载阶段","link":"#bean-class加载阶段","children":[]},{"level":2,"title":"实例化","slug":"实例化","link":"#实例化","children":[{"level":3,"title":"实例化前阶段","slug":"实例化前阶段","link":"#实例化前阶段","children":[]},{"level":3,"title":"实例化阶段","slug":"实例化阶段","link":"#实例化阶段","children":[]},{"level":3,"title":"Bean实例化后阶段","slug":"bean实例化后阶段","link":"#bean实例化后阶段","children":[]}]},{"level":2,"title":"属性赋值前阶段","slug":"属性赋值前阶段","link":"#属性赋值前阶段","children":[]},{"level":2,"title":"初始化","slug":"初始化","link":"#初始化","children":[{"level":3,"title":"接口回调阶段","slug":"接口回调阶段","link":"#接口回调阶段","children":[]},{"level":3,"title":"初始化前阶段","slug":"初始化前阶段","link":"#初始化前阶段","children":[]},{"level":3,"title":"初始化阶段","slug":"初始化阶段","link":"#初始化阶段","children":[]},{"level":3,"title":"初始化后阶段","slug":"初始化后阶段","link":"#初始化后阶段","children":[]},{"level":3,"title":"初始化完成阶段","slug":"初始化完成阶段","link":"#初始化完成阶段","children":[]}]},{"level":2,"title":"销毁阶段","slug":"销毁阶段","link":"#销毁阶段","children":[{"level":3,"title":"销毁前阶段","slug":"销毁前阶段","link":"#销毁前阶段","children":[]},{"level":3,"title":"销毁阶段","slug":"销毁阶段-1","link":"#销毁阶段-1","children":[]}]},{"level":2,"title":"Bean垃圾收集","slug":"bean垃圾收集","link":"#bean垃圾收集","children":[]},{"level":2,"title":"面试题","slug":"面试题-8","link":"#面试题-8","children":[{"level":3,"title":"BeanPostProcess使用场景有哪些？","slug":"beanpostprocess使用场景有哪些","link":"#beanpostprocess使用场景有哪些","children":[]},{"level":3,"title":"BeanFactoryPostProcess与BeanPostProcess的区别","slug":"beanfactorypostprocess与beanpostprocess的区别","link":"#beanfactorypostprocess与beanpostprocess的区别","children":[]},{"level":3,"title":"BeanFactory是怎样处理Bean生命周期？","slug":"beanfactory是怎样处理bean生命周期","link":"#beanfactory是怎样处理bean生命周期","children":[]}]},{"level":2,"title":"Spring Bean配置元信息","slug":"spring-bean配置元信息","link":"#spring-bean配置元信息","children":[]},{"level":2,"title":"Spring Bean属性元信息","slug":"spring-bean属性元信息","link":"#spring-bean属性元信息","children":[]},{"level":2,"title":"Spring容器配置元信息","slug":"spring容器配置元信息","link":"#spring容器配置元信息","children":[]},{"level":2,"title":"基于XML资源装载Spring Bean配置元信息","slug":"基于xml资源装载spring-bean配置元信息","link":"#基于xml资源装载spring-bean配置元信息","children":[]},{"level":2,"title":"基于Properties资源装载Spring Bean配置元信息","slug":"基于properties资源装载spring-bean配置元信息","link":"#基于properties资源装载spring-bean配置元信息","children":[]},{"level":2,"title":"基于Java注解的Spring Bean配置元信息","slug":"基于java注解的spring-bean配置元信息","link":"#基于java注解的spring-bean配置元信息","children":[]},{"level":2,"title":"Spring Bean配置元信息底层实现","slug":"spring-bean配置元信息底层实现","link":"#spring-bean配置元信息底层实现","children":[{"level":3,"title":"XML资源的方式","slug":"xml资源的方式","link":"#xml资源的方式","children":[]},{"level":3,"title":"Properties资源的方式","slug":"properties资源的方式","link":"#properties资源的方式","children":[]},{"level":3,"title":"Java注解的方式","slug":"java注解的方式","link":"#java注解的方式","children":[]}]},{"level":2,"title":"基于XML资源装载Spring 容器配置元信息","slug":"基于xml资源装载spring-容器配置元信息","link":"#基于xml资源装载spring-容器配置元信息","children":[]},{"level":2,"title":"基于Java注解配置Spring 容器配置元信息","slug":"基于java注解配置spring-容器配置元信息","link":"#基于java注解配置spring-容器配置元信息","children":[]},{"level":2,"title":"基于Extensible XML authoring扩展Spring XML元素","slug":"基于extensible-xml-authoring扩展spring-xml元素","link":"#基于extensible-xml-authoring扩展spring-xml元素","children":[]},{"level":2,"title":"基于Properties资源装载外部化配置","slug":"基于properties资源装载外部化配置","link":"#基于properties资源装载外部化配置","children":[]},{"level":2,"title":"基于yml资源装载外部化配置","slug":"基于yml资源装载外部化配置","link":"#基于yml资源装载外部化配置","children":[]},{"level":2,"title":"面试题","slug":"面试题-9","link":"#面试题-9","children":[{"level":3,"title":"Spring内建的XML Schema常见有哪些？","slug":"spring内建的xml-schema常见有哪些","link":"#spring内建的xml-schema常见有哪些","children":[]},{"level":3,"title":"Spring配置元信息有哪些？","slug":"spring配置元信息有哪些","link":"#spring配置元信息有哪些","children":[]},{"level":3,"title":"Extensible XML authoring的缺点？","slug":"extensible-xml-authoring的缺点","link":"#extensible-xml-authoring的缺点","children":[]}]},{"level":2,"title":"Java标准资源管理","slug":"java标准资源管理","link":"#java标准资源管理","children":[]},{"level":2,"title":"Resource接口","slug":"resource接口","link":"#resource接口","children":[]},{"level":2,"title":"内建的Resource实现","slug":"内建的resource实现","link":"#内建的resource实现","children":[]},{"level":2,"title":"Resource接口扩展","slug":"resource接口扩展","link":"#resource接口扩展","children":[]},{"level":2,"title":"Spring资源加载器","slug":"spring资源加载器","link":"#spring资源加载器","children":[]},{"level":2,"title":"Spring通配路径资源加载器","slug":"spring通配路径资源加载器","link":"#spring通配路径资源加载器","children":[]},{"level":2,"title":"Spring通配路径资源扩展","slug":"spring通配路径资源扩展","link":"#spring通配路径资源扩展","children":[]},{"level":2,"title":"依赖注入Spring Resource","slug":"依赖注入spring-resource","link":"#依赖注入spring-resource","children":[]},{"level":2,"title":"依赖注入ResourceLoader","slug":"依赖注入resourceloader","link":"#依赖注入resourceloader","children":[]},{"level":2,"title":"面试题","slug":"面试题-10","link":"#面试题-10","children":[{"level":3,"title":"Spring配置资源中有哪些常见类型？","slug":"spring配置资源中有哪些常见类型","link":"#spring配置资源中有哪些常见类型","children":[]},{"level":3,"title":"请举例不同类型的Spring配置资源","slug":"请举例不同类型的spring配置资源","link":"#请举例不同类型的spring配置资源","children":[]},{"level":3,"title":"Java标准资源管理扩展的步骤","slug":"java标准资源管理扩展的步骤","link":"#java标准资源管理扩展的步骤","children":[]}]},{"level":2,"title":"Spring国际化接口","slug":"spring国际化接口","link":"#spring国际化接口","children":[]},{"level":2,"title":"层次性的MessageSource","slug":"层次性的messagesource","link":"#层次性的messagesource","children":[]},{"level":2,"title":"Java国际化标准实现","slug":"java国际化标准实现","link":"#java国际化标准实现","children":[]},{"level":2,"title":"Java文本格式化","slug":"java文本格式化","link":"#java文本格式化","children":[]},{"level":2,"title":"MessageSource开箱实现","slug":"messagesource开箱实现","link":"#messagesource开箱实现","children":[]},{"level":2,"title":"Message的内建依赖","slug":"message的内建依赖","link":"#message的内建依赖","children":[]},{"level":2,"title":"SpringBoot为什么要新建MessageSource Bean?","slug":"springboot为什么要新建messagesource-bean","link":"#springboot为什么要新建messagesource-bean","children":[]},{"level":2,"title":"面试题","slug":"面试题-11","link":"#面试题-11","children":[{"level":3,"title":"Spring国际化接口有哪些？","slug":"spring国际化接口有哪些","link":"#spring国际化接口有哪些","children":[]},{"level":3,"title":"Spring有哪些MessageSource的内建实现？","slug":"spring有哪些messagesource的内建实现","link":"#spring有哪些messagesource的内建实现","children":[]},{"level":3,"title":"如何实现配置自动更新MessageSource？","slug":"如何实现配置自动更新messagesource","link":"#如何实现配置自动更新messagesource","children":[]}]},{"level":2,"title":"Validator接口设计","slug":"validator接口设计","link":"#validator接口设计","children":[]},{"level":2,"title":"Errors接口设计","slug":"errors接口设计","link":"#errors接口设计","children":[]},{"level":2,"title":"Errors的文案来源","slug":"errors的文案来源","link":"#errors的文案来源","children":[]},{"level":2,"title":"自定义Validator","slug":"自定义validator","link":"#自定义validator","children":[]},{"level":2,"title":"Bean Validation","slug":"bean-validation","link":"#bean-validation","children":[]},{"level":2,"title":"面试题","slug":"面试题-12","link":"#面试题-12","children":[{"level":3,"title":"Spring校验接口是哪个？","slug":"spring校验接口是哪个","link":"#spring校验接口是哪个","children":[]},{"level":3,"title":"Spring有哪些校验核心组件？","slug":"spring有哪些校验核心组件","link":"#spring有哪些校验核心组件","children":[]},{"level":3,"title":"请通过示例演示Spring Bean的校验？","slug":"请通过示例演示spring-bean的校验","link":"#请通过示例演示spring-bean的校验","children":[]}]},{"level":2,"title":"Spring 数据绑定组件","slug":"spring-数据绑定组件","link":"#spring-数据绑定组件","children":[]},{"level":2,"title":"DataBinder元数据","slug":"databinder元数据","link":"#databinder元数据","children":[]},{"level":2,"title":"DataBinder绑定控制参数","slug":"databinder绑定控制参数","link":"#databinder绑定控制参数","children":[]},{"level":2,"title":"Spring底层Java Beans替换实现","slug":"spring底层java-beans替换实现","link":"#spring底层java-beans替换实现","children":[]},{"level":2,"title":"BeanWrapper使用场景","slug":"beanwrapper使用场景","link":"#beanwrapper使用场景","children":[]},{"level":2,"title":"JavaBeans操作属性","slug":"javabeans操作属性","link":"#javabeans操作属性","children":[]},{"level":2,"title":"DataBinder数据校验","slug":"databinder数据校验","link":"#databinder数据校验","children":[]},{"level":2,"title":"面试题","slug":"面试题-13","link":"#面试题-13","children":[{"level":3,"title":"Spring数据绑定API是什么？","slug":"spring数据绑定api是什么","link":"#spring数据绑定api是什么","children":[]},{"level":3,"title":"BeanWrapper与JavaBeans之间的关系是？","slug":"beanwrapper与javabeans之间的关系是","link":"#beanwrapper与javabeans之间的关系是","children":[]},{"level":3,"title":"DataBinder是怎么完成属性类型转换的？","slug":"databinder是怎么完成属性类型转换的","link":"#databinder是怎么完成属性类型转换的","children":[]}]},{"level":2,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":2,"title":"基于JavaBeans接口的类型转换","slug":"基于javabeans接口的类型转换","link":"#基于javabeans接口的类型转换","children":[]},{"level":2,"title":"Spring内建PropertyEditor扩展","slug":"spring内建propertyeditor扩展","link":"#spring内建propertyeditor扩展","children":[]},{"level":2,"title":"自定义PropertyEditor扩展","slug":"自定义propertyeditor扩展","link":"#自定义propertyeditor扩展","children":[]},{"level":2,"title":"PropertyEditor的局限性","slug":"propertyeditor的局限性","link":"#propertyeditor的局限性","children":[]},{"level":2,"title":"Spring3 通用类型转换接口","slug":"spring3-通用类型转换接口","link":"#spring3-通用类型转换接口","children":[]},{"level":2,"title":"Spring内建类型转换器","slug":"spring内建类型转换器","link":"#spring内建类型转换器","children":[]},{"level":2,"title":"Converter接口的局限性","slug":"converter接口的局限性","link":"#converter接口的局限性","children":[]},{"level":2,"title":"GenericConverter接口","slug":"genericconverter接口","link":"#genericconverter接口","children":[]},{"level":2,"title":"优化GenericConverter接口","slug":"优化genericconverter接口","link":"#优化genericconverter接口","children":[]},{"level":2,"title":"扩展Spring类型转换器","slug":"扩展spring类型转换器","link":"#扩展spring类型转换器","children":[]},{"level":2,"title":"统一类型转换服务","slug":"统一类型转换服务","link":"#统一类型转换服务","children":[]},{"level":2,"title":"ConversionService作为依赖","slug":"conversionservice作为依赖","link":"#conversionservice作为依赖","children":[]},{"level":2,"title":"面试题","slug":"面试题-14","link":"#面试题-14","children":[{"level":3,"title":"Spring类型转换实现有哪些？","slug":"spring类型转换实现有哪些","link":"#spring类型转换实现有哪些","children":[]},{"level":3,"title":"Spring类型转换器接口有哪些？","slug":"spring类型转换器接口有哪些","link":"#spring类型转换器接口有哪些","children":[]},{"level":3,"title":"TypeDescriptor是如何处理泛型？","slug":"typedescriptor是如何处理泛型","link":"#typedescriptor是如何处理泛型","children":[]}]},{"level":2,"title":"Java泛型基础","slug":"java泛型基础","link":"#java泛型基础","children":[]},{"level":2,"title":"Java 5类型接口","slug":"java-5类型接口","link":"#java-5类型接口","children":[]},{"level":2,"title":"Spring泛型类型辅助类","slug":"spring泛型类型辅助类","link":"#spring泛型类型辅助类","children":[]},{"level":2,"title":"泛型集合类型辅助类","slug":"泛型集合类型辅助类","link":"#泛型集合类型辅助类","children":[]},{"level":2,"title":"Spring方法参数封装","slug":"spring方法参数封装","link":"#spring方法参数封装","children":[]},{"level":2,"title":"ResolvableType","slug":"resolvabletype","link":"#resolvabletype","children":[]},{"level":2,"title":"面试题","slug":"面试题-15","link":"#面试题-15","children":[{"level":3,"title":"Java泛型擦写是发生在编译时，还是运行时？","slug":"java泛型擦写是发生在编译时-还是运行时","link":"#java泛型擦写是发生在编译时-还是运行时","children":[]},{"level":3,"title":"请介绍Java 5 Type类型的派生类或接口?","slug":"请介绍java-5-type类型的派生类或接口","link":"#请介绍java-5-type类型的派生类或接口","children":[]},{"level":3,"title":"请说明ResolvableType的设计优势","slug":"请说明resolvabletype的设计优势","link":"#请说明resolvabletype的设计优势","children":[]}]},{"level":2,"title":"Java事件/监听器编程模型","slug":"java事件-监听器编程模型","link":"#java事件-监听器编程模型","children":[]},{"level":2,"title":"面向接口的事件/监听器设计模式","slug":"面向接口的事件-监听器设计模式","link":"#面向接口的事件-监听器设计模式","children":[]},{"level":2,"title":"面向注解的事件/监听器设计模式","slug":"面向注解的事件-监听器设计模式","link":"#面向注解的事件-监听器设计模式","children":[]},{"level":2,"title":"Spring标准事件 ApplicationEvent","slug":"spring标准事件-applicationevent","link":"#spring标准事件-applicationevent","children":[]},{"level":2,"title":"基于接口的Spring事件监听器","slug":"基于接口的spring事件监听器","link":"#基于接口的spring事件监听器","children":[]},{"level":2,"title":"基于注解的Spring事件监听器","slug":"基于注解的spring事件监听器","link":"#基于注解的spring事件监听器","children":[]},{"level":2,"title":"注册Spring ApplicationListener","slug":"注册spring-applicationlistener","link":"#注册spring-applicationlistener","children":[]},{"level":2,"title":"Spring事件发布器","slug":"spring事件发布器","link":"#spring事件发布器","children":[]},{"level":2,"title":"Spring层次性上下文事件传播","slug":"spring层次性上下文事件传播","link":"#spring层次性上下文事件传播","children":[]},{"level":2,"title":"Spring内建事件","slug":"spring内建事件","link":"#spring内建事件","children":[]},{"level":2,"title":"Payload事件","slug":"payload事件","link":"#payload事件","children":[]},{"level":2,"title":"自定义Spring事件","slug":"自定义spring事件","link":"#自定义spring事件","children":[]},{"level":2,"title":"依赖注入ApplicationEventPublisher","slug":"依赖注入applicationeventpublisher","link":"#依赖注入applicationeventpublisher","children":[]},{"level":2,"title":"依赖查找ApplicationEventMulticaster","slug":"依赖查找applicationeventmulticaster","link":"#依赖查找applicationeventmulticaster","children":[]},{"level":2,"title":"ApplicationEventPublisher底层实现","slug":"applicationeventpublisher底层实现","link":"#applicationeventpublisher底层实现","children":[]},{"level":2,"title":"同步和异步Spring事件广播","slug":"同步和异步spring事件广播","link":"#同步和异步spring事件广播","children":[]},{"level":2,"title":"Spring事件异常处理","slug":"spring事件异常处理","link":"#spring事件异常处理","children":[]},{"level":2,"title":"Spring事件/监听实现原理","slug":"spring事件-监听实现原理","link":"#spring事件-监听实现原理","children":[]},{"level":2,"title":"SpringBoot事件","slug":"springboot事件","link":"#springboot事件","children":[]},{"level":2,"title":"面试题","slug":"面试题-16","link":"#面试题-16","children":[{"level":3,"title":"Spring事件核心接口/组件？","slug":"spring事件核心接口-组件","link":"#spring事件核心接口-组件","children":[]}]},{"level":2,"title":"Spring同步和异步事件处理的使用场景？","slug":"spring同步和异步事件处理的使用场景","link":"#spring同步和异步事件处理的使用场景","children":[]},{"level":2,"title":"@EventListener的工作原理","slug":"eventlistener的工作原理","link":"#eventlistener的工作原理","children":[]},{"level":2,"title":"Spring核心注解场景分类","slug":"spring核心注解场景分类","link":"#spring核心注解场景分类","children":[]},{"level":2,"title":"Spring注解编程模型","slug":"spring注解编程模型","link":"#spring注解编程模型","children":[]},{"level":2,"title":"Spring元注解","slug":"spring元注解","link":"#spring元注解","children":[]},{"level":2,"title":"Spring模式注解","slug":"spring模式注解","link":"#spring模式注解","children":[]},{"level":2,"title":"Spring 组合注解","slug":"spring-组合注解","link":"#spring-组合注解","children":[]},{"level":2,"title":"Spring注解属性别名","slug":"spring注解属性别名","link":"#spring注解属性别名","children":[]},{"level":2,"title":"Spring注解属性覆盖","slug":"spring注解属性覆盖","link":"#spring注解属性覆盖","children":[]},{"level":2,"title":"Spring @Enable模块驱动","slug":"spring-enable模块驱动","link":"#spring-enable模块驱动","children":[]},{"level":2,"title":"Spring条件注解","slug":"spring条件注解","link":"#spring条件注解","children":[]},{"level":2,"title":"SpringBoot和SpringCloud注解","slug":"springboot和springcloud注解","link":"#springboot和springcloud注解","children":[]},{"level":2,"title":"面试题","slug":"面试题-17","link":"#面试题-17","children":[{"level":3,"title":"Spring模式注解有哪些？","slug":"spring模式注解有哪些","link":"#spring模式注解有哪些","children":[]},{"level":3,"title":"@EventListener的工作原理？","slug":"eventlistener的工作原理-1","link":"#eventlistener的工作原理-1","children":[]},{"level":3,"title":"@PropertySource工作原理","slug":"propertysource工作原理","link":"#propertysource工作原理","children":[]}]},{"level":2,"title":"Environment接口使用场景","slug":"environment接口使用场景","link":"#environment接口使用场景","children":[]},{"level":2,"title":"Environment占位符处理","slug":"environment占位符处理","link":"#environment占位符处理","children":[]},{"level":2,"title":"理解条件配置Spring Profiles","slug":"理解条件配置spring-profiles","link":"#理解条件配置spring-profiles","children":[]},{"level":2,"title":"依赖注入Environment","slug":"依赖注入environment","link":"#依赖注入environment","children":[]},{"level":2,"title":"依赖查找Environment","slug":"依赖查找environment","link":"#依赖查找environment","children":[]},{"level":2,"title":"依赖注入@Value","slug":"依赖注入-value","link":"#依赖注入-value","children":[]},{"level":2,"title":"Spring类型转换在Environment中的运用","slug":"spring类型转换在environment中的运用","link":"#spring类型转换在environment中的运用","children":[]},{"level":2,"title":"Spring类型转换在@Value中的运用","slug":"spring类型转换在-value中的运用","link":"#spring类型转换在-value中的运用","children":[]},{"level":2,"title":"Spring配置属性源PropertySource","slug":"spring配置属性源propertysource","link":"#spring配置属性源propertysource","children":[]},{"level":2,"title":"Spring内建的配置属性源","slug":"spring内建的配置属性源","link":"#spring内建的配置属性源","children":[]},{"level":2,"title":"基于注解扩展Spring配置属性源","slug":"基于注解扩展spring配置属性源","link":"#基于注解扩展spring配置属性源","children":[]},{"level":2,"title":"基于API扩展Spring配置属性源","slug":"基于api扩展spring配置属性源","link":"#基于api扩展spring配置属性源","children":[]},{"level":2,"title":"Spring 测试配置属性源","slug":"spring-测试配置属性源","link":"#spring-测试配置属性源","children":[]},{"level":2,"title":"面试题","slug":"面试题-18","link":"#面试题-18","children":[{"level":3,"title":"简单介绍Spring Environment接口？","slug":"简单介绍spring-environment接口","link":"#简单介绍spring-environment接口","children":[]},{"level":3,"title":"如何控制PropertySource的优先级？","slug":"如何控制propertysource的优先级","link":"#如何控制propertysource的优先级","children":[]},{"level":3,"title":"Environment完整的生命周期是怎样的？","slug":"environment完整的生命周期是怎样的","link":"#environment完整的生命周期是怎样的","children":[]}]},{"level":2,"title":"Spring应用上下文启动准备阶段","slug":"spring应用上下文启动准备阶段","link":"#spring应用上下文启动准备阶段","children":[]},{"level":2,"title":"BeanFactory创建阶段","slug":"beanfactory创建阶段","link":"#beanfactory创建阶段","children":[]},{"level":2,"title":"BeanFactory准备阶段","slug":"beanfactory准备阶段","link":"#beanfactory准备阶段","children":[]},{"level":2,"title":"BeanFactory后置处理阶段","slug":"beanfactory后置处理阶段","link":"#beanfactory后置处理阶段","children":[]},{"level":2,"title":"BeanFactory注册BeanPostProcess","slug":"beanfactory注册beanpostprocess","link":"#beanfactory注册beanpostprocess","children":[]},{"level":2,"title":"初始化内建MessageSource","slug":"初始化内建messagesource","link":"#初始化内建messagesource","children":[]},{"level":2,"title":"初始化内建Spring事件广播器","slug":"初始化内建spring事件广播器","link":"#初始化内建spring事件广播器","children":[]},{"level":2,"title":"Spring应用上下文刷新","slug":"spring应用上下文刷新","link":"#spring应用上下文刷新","children":[]},{"level":2,"title":"Spring事件监听器注册","slug":"spring事件监听器注册","link":"#spring事件监听器注册","children":[]},{"level":2,"title":"BeanFactory初始化完成阶段","slug":"beanfactory初始化完成阶段","link":"#beanfactory初始化完成阶段","children":[]},{"level":2,"title":"Spring应用上下文刷新完成阶段","slug":"spring应用上下文刷新完成阶段","link":"#spring应用上下文刷新完成阶段","children":[]},{"level":2,"title":"Spring 应用上下文启动阶段","slug":"spring-应用上下文启动阶段","link":"#spring-应用上下文启动阶段","children":[]},{"level":2,"title":"Spring 应用上下文停止阶段","slug":"spring-应用上下文停止阶段","link":"#spring-应用上下文停止阶段","children":[]},{"level":2,"title":"Spring应用上下文关闭阶段","slug":"spring应用上下文关闭阶段","link":"#spring应用上下文关闭阶段","children":[]},{"level":2,"title":"面试题","slug":"面试题-19","link":"#面试题-19","children":[{"level":3,"title":"Spring应用上下文生命周期有哪些阶段？","slug":"spring应用上下文生命周期有哪些阶段","link":"#spring应用上下文生命周期有哪些阶段","children":[]},{"level":3,"title":"Environment完整的生命周期？","slug":"environment完整的生命周期","link":"#environment完整的生命周期","children":[]}]},{"level":2,"title":"Spring核心特性","slug":"spring核心特性-1","link":"#spring核心特性-1","children":[]},{"level":2,"title":"Spring核心价值","slug":"spring核心价值","link":"#spring核心价值","children":[]},{"level":2,"title":"为什么说ObjectFactory提供的是延迟依赖查找？","slug":"为什么说objectfactory提供的是延迟依赖查找","link":"#为什么说objectfactory提供的是延迟依赖查找","children":[]},{"level":2,"title":"依赖查找（注入）的Bean会被缓存嘛？","slug":"依赖查找-注入-的bean会被缓存嘛","link":"#依赖查找-注入-的bean会被缓存嘛","children":[]},{"level":2,"title":"@Bean的处理流程是怎样的？","slug":"bean的处理流程是怎样的","link":"#bean的处理流程是怎样的","children":[]},{"level":2,"title":"BeanFactory是如何处理循环依赖的？","slug":"beanfactory是如何处理循环依赖的","link":"#beanfactory是如何处理循环依赖的","children":[]}],"git":{"updatedTime":1693669831000,"contributors":[{"name":"jiyongchao","email":"jiyongchaowy@163.com","commits":1}]},"filePathRelative":"framework/spring_framework/README.md"}');export{l as data};
